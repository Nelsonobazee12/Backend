version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: server_postgres
    environment:
      POSTGRES_DB: server_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: nelson1234
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: unless-stopped

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: Backend_app
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/server_db
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=nelson1234
#    depends_on:
#      - postgres
#      - redis
#    env_file:
#      - .env
#    networks:
#      - backend-network
#    restart: unless-stopped

  redis:
    image: redis:7.0.11
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend-network
    restart: always

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - backend-network

volumes:
  postgres_data:
  redis_data:
  #keycloak_postgres_data:  # Separate volume for Keycloak DB

networks:
  backend-network:
    driver: bridge



#production
#version: '3.8'
#services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: Backend_app
#    ports:
#      - "8080:8080"
##    environment:
##          DATABASE_URL: "jdbc:postgresql://aws-0-us-east-1.pooler.supabase.com:6543/postgres"
##          DATABASE_USER: "postgres.mbeuayjarthnctszscco"
##          DATABASE_PASSWORD: "2M#fDk!D*Z2H@ap"
##          SPRING_CACHE_TYPE: redis
##          SPRING_REDIS_HOST: redis
##          SPRING_REDIS_PORT: 6379
##          SPRING_REDIS_PASSWORD: nelson1234
#    env_file:
#      - .env
#    depends_on:
#      - redis
#
#  redis:
#    image: redis:7.0.11
#    container_name: redis_cache
#    ports:
#      - "6379:6379"
#    restart: always
#    volumes:
#      - redis_data:/data
#
#volumes:
#  redis_data:


#version: '3.8'
#services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: Backend_app
#    ports:
#      - "8080:8080"
#    environment:
#      DATABASE_URL: "jdbc:postgresql://aws-0-us-east-1.pooler.supabase.com:6543/postgres"
#      DATABASE_USER: "postgres.mbeuayjarthnctszscco"
#      DATABASE_PASSWORD: "2M#fDk!D*Z2H@ap"
#      SPRING_CACHE_TYPE: redis
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#      SPRING_REDIS_PASSWORD: nelson1234
#    depends_on:
#      - redis
#
#  redis:
#     image: redis:7.0.11
#     container_name: redis_cache
#     ports:
#        - "6379:6379"
#     restart: always
#     volumes:
#        - redis_data:/data
#
#volumes:
#  redis_data:


